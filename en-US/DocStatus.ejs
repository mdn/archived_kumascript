<%
// Builds a documentation status page
//
// Parameters:
//  $0  -  The section to look at (e.g. "/en-us/docs/Web/JavaScript")
//  $1  -  Bugzilla query for dev-doc-needed
//  $2  -  Bugzilla query for documentaion requests
//  $3  -  Custom status metrics. Object containg the headline as the key and the metric number plus a anchor as an array.
//         e.g. { cleanup: {title: "Clean-up", link: "#Cleanup_on_standard_built-in_ECMAScript_objects", counter: 250 }

var pageList = page.subpagesExpand($0);
var metrics = {
    pageCounter: 0,
    noTags: {
        title: 'No tags',
        link: '#No_tags',
        counter: 0
    },
    needsTags: {
        title: 'Needs* tags',
        link: '#Need_tags',
        counter: 0
    },
    editorialReviews: {
        title: 'Editorial reviews',
        link: '#Editorial_reviews',
        counter: 0
    },
    technicalReviews: {
        title: 'Technical reviews',
        link: '#Technical_reviews',
        counter: 0
    },
    ddn: {
        title:'Dev-doc-needed bugs',
        link: '#Dev-doc-needed_bugs',
        counter: 0
    },
    dr: {
        title: 'Documentation requests',
        link: '#Documentation_requests',
        counter: 0
    },
    outdated: {
        title: 'Outdated pages',
        link: '#Outdated_pages',
        counter: 0
    }
};

if ($1) {
  var customMetrics = JSON.parse($1);
  for (var key in customMetrics) {
    metrics[key] = customMetrics[key];
  }
}

function hasNoTags(tagList) {
    if (!tagList || tagList == undefined || tagList.length == 0) {
      return 1;
    }
    return 0;
}

function containsNeedsWorkTag(tagList) {
    if (!tagList || tagList == undefined) return 0;
    for (var i = 0, len = tagList.length; i < len; i++) {
        if (tagList[i].toLowerCase().substr(0, 5) == 'needs') return 1;
    }
    return 0;
}

function hasReviewTag(reviewTags, reviewType) {
    if (!reviewTags || reviewTags == undefined) return 0;
    for (var i = 0, len = reviewTags.length; i < len; i++) {
        if (reviewTags[i] === reviewType) return 1;
    }
    return 0;
}

function getPages(pageList) {
    if (pageList) {
        for (var i = 0; i < pageList.length; i++) {
            metrics.pageCounter++;
            if (hasNoTags(pageList[i].tags)) { metrics.noTags.counter++; }
            if (containsNeedsWorkTag(pageList[i].tags)) { metrics.needsTags.counter++; }
            if (hasReviewTag(pageList[i].review_tags, 'editorial')) { metrics.editorialReviews.counter++; }
            if (hasReviewTag(pageList[i].review_tags, 'technical')) { metrics.technicalReviews.counter++; }
            
            var subpage = getPages(pageList[i].subpages);
            /*if (subpage) {
                metrics.pageCounter++;
                if (hasNoTags(subpage.tags)) { metrics.noTags.counter++; }
                if (containsNeedsWorkTag(subpage.tags)) { metrics.needsTags.counter++; }
                if (hasReviewTag(subpage.review_tags, 'editorial')) { metrics.editorialReviews.counter++; }
                if (hasReviewTag(subpage.review_tags, 'technical')) { metrics.technicalReviews.counter++; }
            } */
        }
    }
}

getPages(pageList);

var indexPage = $0 + '/Index';

%>
<table class="docstatussummary standard-table">
  <thead>
    <tr>
      <th><a href="<%=indexPage%>">Pages</a></th>
<%
 for (var key in metrics) {
  if (metrics.hasOwnProperty(key)) { 
      var href = metrics[key][1];
      var title = metrics[key][0].replace(/_/g, " ");
      if (href.indexOf('#', 0) === 0) {
        href = env.path + metrics[key][1];
      }
%>
    <th><a href="<%=href%>"><%=title%></a></th>
<%  }
} %>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><%=pageCounter%></td>
<%
 for (var key in metrics) {
  if (metrics.hasOwnProperty(key)) {
    var percent = Math.ceil((metrics[key].counter / metrics.pageCounter) * 100);
    var color = "rgb(204, 255, 153)";
    if (percent >= 5) { color = "rgb(255, 255, 153)" }
    if (percent >= 10) { color = "rgb(255, 204, 204)" }
 %>
    <td style="background-color: <%=color%>;"><%=metrics[key].counter%> (<%=percent%>%) </td>
<%  }
} %>
    </tr>
  </tbody>
</table>
