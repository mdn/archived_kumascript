<%
/*
  Searches all CSS properties in CSSData that are animated and lists them
  in columns
*/

function csslink(prop) {
    return '<code><a href="/' + locale + '/docs/Web/CSS/' + prop + '">' + prop + '</a></code>';   
}

// Read all CSSData and extract animated properties

var data = string.deserialize(template("CSSData"));
var animatedProps = [];

// Go through all properties, and test if they are animated. If so, add them to
// the animatedProps array.
for (var property in data.properties) {
    if (data.properties.hasOwnProperty(property)) {
        if (data.properties[property].animatable !== 'no') {
            animatedProps.push(property);
        }
    }
}
animatedProps.sort();

// Build the output string
var result = '<div class="index">\n  <ul>\n';
for (var prop in animatedProps) {
    if (result) {
        result += ' ';
    }
    result += '    <li>' + template("cssxref", [prop]) + '</li>\n';
}
result += '  </ul>\n</div>';

%><%- result %>
