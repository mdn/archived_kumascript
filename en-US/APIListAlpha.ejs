<%
// Creates a list of API terms from each top-level subpage of the page
// on which this template is used.
//
// Parameters:
//  $0 - If 0, all subpages are included; if 1, pages with "." in their
//       titles are left out.
//  $1 - Text to insert before the term's name
//  $2 - Text to insert after the term's name

var insertBefore = $1 || "";
var insertAfter = $2 || "";
var skipMembers = $0 || 0;

function pageSorter(a, b) {
    var al = a.title.toLowerCase();
    var bl = b.title.toLowerCase();
    return al.localeCompare(bl);
}

function allowTerm(a) {
    var len = a.length;
    
    for (var i=0; i<len; i++) {
        if (a[i] == '.') {
            return 0;
        }
    }
    return 1;
}

function escapeQuotes(a) {
    var b = "";
    var len = a.length;
    
    for (var i=0; i<len; i++) {
        var c = a[i];
        if (c=="\"") {
            c="&quot;";
        }
        b += c;
    }
    var regex = /(<([^>]+)>)/ig;
    b = b.replace(regex, "");
    return b;
}

function containsTag(tagList, tag) {
    if (!tagList || tagList == undefined) {
        return 0;
    }
    tag = tag.toLowerCase();
    for (var i=0; i<tagList.length; i++) {
        if (tagList[i].toLowerCase() == tag) {
            return 1;
        }
    }
    return 0;
}

var termList = page.subpages();
var lang = env.slug;
var letters = "";
var html = "";
var extra = "";

termList.sort(pageSorter);

switch(lang) {
    default:    // en-US
        letters ="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        break;
}

var numLetters = letters.length;
var termIndex = 0;
var numTerms = termList.length;

for (var i = 0; i < numLetters; i++) {
    var curLetter = letters[i];
    var insertedHeading;
    
    insertedHeading = false;            // Haven't done this letter's heading yet
    
    if (termIndex < numTerms) {
        do {
            var term = termList[termIndex];
            var title = term.title;
            var tags = term.tags;
            
            // Leave out functions and properties if desired
            
            if (skipMembers && !allowTerm(title)) {
                termIndex++;
                continue;
            }
            
            var url = term.url;
            var badge = "";
            
            // Build any badge text that may be needed */
            
            if (containsTag(tags, "Non-standard")) {
                badge = " " + template("NonStandardBadge", []);
            }
            
            if (containsTag(tags, "Experimental")) {
                badge += " " + template("ExperimentalBadge", []);
            }
            
            if (tags && tags != undefined) {
                badge += " " + tags.length;
            }
        
            if (title[0].toUpperCase() == curLetter) {
                if (!insertedHeading) {
                    html += "<span>" + curLetter + "</span><ul>";
                    insertedHeading = true;
                }
                html += '<li><code><a href="' + url + '" title="' + escapeQuotes(term.summary) + '">' + insertBefore + title + insertAfter + '</a></code>' + badge + '</li>';
                termIndex++;
            } else {
                break;
            }
        } while (termIndex < numTerms);
    }
    html += "</ul>";
}


%><div class="index">
<%-html%>
</div>
