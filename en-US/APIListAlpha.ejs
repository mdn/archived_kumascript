<%
// Creates a list of API terms from each top-level subpage of the page
// on which this template is used.
//
// Parameters:
//  $0 - If 0, terms are listed unadorned; if 1, "()" is appended.
//  $1 - If 0, all subpages are included; if 1, pages with "." in their
//       titles are left out.

var addParens = $0 || 0;
var skipMembers = $1 || 0;

function pageSorter(a, b) {
    return a.title.localeCompare(b.title);
}

function allowTerm(a) {
    var len = a.length;
    
    for (var i=0; i<len; i++) {
        if (a[i] == '.') {
            return 0;
        }
    }
    return 1;
}

var termList = page.subpages();
var lang = env.slug;
var letters = "";
var html = "";
var extra = "";

termList.sort(pageSorter);

switch(lang) {
    default:    // en-US
        letters ="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        break;
}

var numLetters = letters.length;
var termIndex = 0;
var numTerms = termList.length;

if (addParens != 0) {
    extra = "()";
}

for (var i=0; i<numLetters; i++) {
    var curLetter = letters[i];
    html += "<span>" + curLetter + "</span><ul>";
    if (termIndex < numTerms) {
        do {
            var term = termList[termIndex];
            var title = term.title;
            
            // Leave out functions and properties if desired
            
            if (skipMembers && !allowTerm(title)) {
                termIndex++;
                break;
            }
            
            var url = term.url;
        
            if (title[0].toUpperCase() == curLetter) {
                html += "<li><code><a href='" + url + "'>" + title + extra + "</a></code></li>";
                termIndex++;
            } else {
                break;
            }
        } while (termIndex < numTerms);
    }
    html += "</ul>";
}
%>
<div class="index">
<%-html%>
</div>
