<%

/* Used for generating cross-references within the DOM Event documentation.     */
/* Link to DOM/DOM_event_reference/$0,                                          */
 /* @param */
/*   The path of the page to link to, relative to the DOM documentation path.   */
/* @param [optional] */
/*   The text to use for the link.  If omitted, the value of the first          */
/*   parameter will be used */
/* @param [optional] */
/*   An anchor to link to on the page. Link text will display as $0.$2 or $1.$2 */

/* get a page's language (Don't use page.language!) */
var u = Uri.Parts(Page.uri);
var lang = string.toLower(u.path[0]);
if(string.Contains(lang, "project")) {
  lang = string.Substr(lang, 8);
}
/* fall back to page.language on a user page */
else if (string.StartsWith(lang, "user:")) {
  lang = page.language;
}

var api = $0;
var str = $0;

if ($1 && string.IsLetter($1)) {
  str = $1;
}

if (string.endswith($0, '()')) {
  api = string.remove(api, string.length(api) - 2);
}

var destNewType = lang + '/' + 'DOM/DOM_event_reference/' + api;
var destEng = 'en' + '/' + 'DOM/DOM_event_reference/' + api;
var anch = '';

if ($2) {
  str = str + '.' + $2;
  anch = '#' + $2;
}
if(wiki.pageExists(destNewType)) { /* the page exists from the dekiwiki age */
  <code>(web.link(wiki.uri(destNewType) + anch,str))</code>;
} else if (lang == 'zh_tw' && wiki.pageExists(destEng)){  
  /* the MozTW community consider links to English pages better than red ones. 
     I'll write about this to mozilla.dev.mdc later */ 
  <code>(web.link(wiki.uri(destEng) + anch,str))</code>;
} else { /* the page doesn't exist */
  <code><<span class="start-tag">a</span><span class="attribute-name"> rel</span>=(<span class="attribute-value">'internal') </span><span class="attribute-name">href</span><span>=</span>(<span>wiki.uri(</span>destNewType<span>)</span> + anch<span>) </span><span class="attribute-name">class</span>=<span class="attribute-value">('new')></span>(str)</<span class="end-tag">a></span></code>;
}
%>
