<%
// Creates a list of the subpages of the current page, with their summaries,
// as a definition list. Doesn't do any additional formatting.
//
// Parameters:
//
//  $0  A list of pages to output instead of the subpages of the current page;
//      OPTIONAL.

function pageSorter(a, b) {
    return a.title.localeCompare(b.title);
}

function containsTag(tagList, tag) {
    if (!tagList || tagList == undefined) return 0;
    tag = tag.toLowerCase();
    for (var i = 0, len = tagList.length; i < len; i++) {
        if (tagList[i].toLowerCase() == tag) return 1;
    }
    return 0;
}

var termList;

if ($0 && ($0 != undefined)) {
    termList = JSON.parse($0);
} else {
    termList = page.subpagesExpand();
}

var numTerms = termList.length;
var html = "";
html += "<strong>Num terms: " + numTerms + "</strong>";

if (numTerms) {
    html = "<dl>";
    
    termList.sort(pageSorter);
    
    var termIndex = 0;
    var numTerms = termList.length;
    
    for (var i=0; i<numTerms; i++) {
        var page = termList[i];
        
        if (!containsTag(page.tags, "junk")) {
            var title = page.title;
            var summary = page.summary.replace(/<img[^>]*>/g," ");
            var url = page.url;
        
            html += "<dt class='landingPageList'><a href='" + url + "'>" + title + "</a></dt><dd class='landingPageList'>" + summary + "</dd>";
        }
    }
    
    html += "</dl>";
}
%>
<%-html%>
