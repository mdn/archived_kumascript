<% /*
$0: inline/header/method
$1: version of obsolescence (optional)
     prepend version with HTML, CSS, JS, or Gecko for those techs
$2: additional information required for the type specified by the first parameter
     method requires the method name
*/

var lang = env.locale;

var str = "";
var ver = "";
var link = "";
var tip = "";

if ($1) {
    var t = $1.toLowerCase();
    var n = "";

    if ( string.startswith(t, "js") ) {
    	n = string.trim( string.substr(t, 2) );
		ver = "JavaScript ";
		if (string.length(n) > 0) {
    		if(wiki.pageExists(lang + '/docs/JavaScript/New_in_JavaScript/' + n)) {
				link = '/' + lang + '/docs/JavaScript/New_in_JavaScript/' + n;
			} else if(wiki.pageExists('/en-US/docs/JavaScript/New_in_JavaScript/' + n)) {
				link = '/en-US/docs/JavaScript/New_in_JavaScript/' + n;
			}
		}
	} else if (string.startswith(t, "css")) {
		n = string.trim(string.substr(t, 3));
		ver = "CSS ";
	} else if (string.startswith(t, "html")) {
		n = string.trim(string.substr(t, 4));
		
		var N = (n[0] === "4") ? "" : n; 
		
		ver = "HTML";
		
		if (string.length(N) > 0) {
		    if(wiki.pageExists('/' + lang + '/docs/HTML/HTML' + N)) {
				link = '/' + lang + '/docs/HTML/HTML' + N;
			} else if(wiki.pageExists('/en-US/docs/HTML/HTML' + N)) {
				link = '/en-US/docs/HTML/HTML' + N;
			} else if(wiki.pageExists('/' + lang + '/docs/HTML')) {
				link = '/' + lang + '/docs/HTML';
			} else {
				link = '/en-US/docs/HTML';
			}
		} else {
			link = '/' + lang + '/docs/HTML';
		}
	} else if (string.startswith(t, "gecko")) {
		n = string.trim( string.substr(t, 5) );
		ver = "Gecko ";
		tip = template("geckoRelease", [n]);
	}
	
	n = string.trim(n);
	ver = (string.length(n) > 0) ? ver + n : "";
}

// If there's a link, turn the version into a link to that URL

if (link.length) { ver = web.link(link, ver); }

switch(lang) {
	case 'de':
		str = "Unerwünscht";
		if (ver.length) { str = str + " " + ver; }
	    break;
	case 'es':
		str = "Desaprobado";
		if (ver.length) { str = str + " " + ver; }
	    break;
	case 'fr':
		str = "Obsolète";
		if (ver.length) { str = str + " depuis " + ver; }
	    break;
	case 'it':
		str = "Deprecato";
		if (ver.length) { str = str + " " + ver; }
	    break;
	case 'ja':
		str = "非推奨";
		if (ver.length) { str = str + " " + ver; }
    	break;
	case 'ko':
		str = "Deprecated";
		if (ver.length) { str = str + " " + ver; }
	    break;
	case 'pl':
		str = "Wycofywany";
		if (ver.length) { str = str + " " + ver; }
    	break;
	case 'ru':
		str = "Не рекомендуется";
		if (ver.length) { str = str + " " + ver; }
	    break;
	case 'zh-CN':
		str = "不推荐";
	    if (ver.length) { str = str + " " + ver; }
	    break;
	case 'zh-TW':
		str = "已正式宣告棄用";
		if (ver.length) { str = str + " " + ver; }
	    break;
	default:
		str = "Deprecated";
		if (ver.length) { str = str + " since " + ver; }
	    break;
}

switch($0) {
	case 'inline':
		%><span class="inlineIndicator deprecated deprecatedInline" title="<%=(tip)%>"><%-str%></span><%
		break;
	case 'header':
		if (tip.length) { str = str + " " + tip; }
		%><div class="overheadIndicator deprecated deprecatedHeader">
			<p><%-str%></p>
		</div><%
		break;
	case 'method':
		if (tip.length) { str = str + " " + tip; }
		%><div>
			<span class="indicatorInHeadline deprecated deprecatedMethod"><%-str%></span>
			<h3><%-($2)%></h3>
		</div><%
		break;
    default: break;
}%>
