<%

/* parameters: first the property name, second the display name for the property (optional) */
/* get the page language */

var u = uri.parts(Page.uri);
var lang = string.toLower(u.path[0]);
if (string.contains(lang, "project")) {
  lang = string.substr(lang, 8);
}
/* fall back to page.language on a user page */
else if (string.StartsWith(lang, "user:")) {
 lang = page.language;
}

/* set up the page name based on language */

var propName = "Property";
var anch = "p-" + $0;
var dispApi = $0;
if ($1) {
  dispApi = $1;
}

switch(lang) {
  case 'de':
    propName = "Eigenschaften";
    break;
  case 'fr':
    propName = "Propriétés";
    break;
  case 'pl':
    propName = "Wlasnosc";
    break;
}

var destOldType = lang + '/XUL:' + propName + ':' + $0;
var destNewType = lang + '/XUL/' + propName + '/' + $0;

if (wiki.pageExists(destNewType)) {
 <code><span>(web.link(wiki.uri(destNewType), dispApi))</span></code>
} else if (wiki.pageExists(destOldType)) {
  <code><span>(web.link(wiki.uri(destOldType), dispApi))</span></code>
} else {
  var targeturi = "https://developer.mozilla.org/Article_not_found?uri=" + destNewType;
  <code><a rel=('internal') href=(targeturi) class=('new')>(dispApi)</a></code>;
}
</pre>
