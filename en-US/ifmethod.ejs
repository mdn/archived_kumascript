<%
/* creates a link to a method in an interface */
/* parameters: interface name then method name */
/* get a page's language (Don't use page.language!) */
var u = Uri.Parts(Page.uri);
var lang = string.toLower(u.path[0]);
if(string.Contains(lang, "project")) {
 lang = string.Substr(lang, 8);
}
/* fall back to page.language on a user page */
else if (string.StartsWith(lang, "user:")) {
 lang = page.language;
}
var destNewType = lang + '/XPCOM_Interface_Reference/' + $0;
var destOldType = lang + '/' + $0;
var apiString = $0 + '.' + $1 + '()';
if(wiki.pageExists(destNewType)) { /* the page exists from the dekiwiki age */
    %><code><%-(web.link(wiki.uri(destNewType) + '#' + $1 + '()', apiString))%></code><%
} else if (wiki.pageExists(destOldType)) { /* the page exists from the mediawiki age */
    %><code><%-(web.link(wiki.uri(destOldType) + '#' + $1 + '()', apiString))%></code><%
} else { /* the page doesn't exist */
  var targeturi = "https://developer.mozilla.org/Article_not_found?uri=" + destNewType +
        "&ident=" + $0;
  %><code><a rel="internal" href="<%=targeturi%>" class="new"><%=apiString%></a></code><%
}
%>
