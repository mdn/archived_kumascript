<%
// Generate quick links for JavaScript reference docs
//
// TODO: Highlight or remove the link for the page you are currently on (?)
//
// Parameters:
//
//  $0 - JavaScript reference section (e.g Global_Objects)
//  $1 - JavaScript reference object/subject (e.g. Number, Array, Function)
// 
// {{JSRef("Global_Objects", "Number")}} - Generates quicklinks for the Number object including all methods and properties

function containsTag(tagList, tag) {
    if (!tagList || tagList == undefined) return 0;
    tag = tag.toLowerCase();
    for (var i = 0, len = tagList.length; i < len; i++) {
        if (tagList[i].toLowerCase() == tag) return 1;
    }
    return 0;
}

// Strings for l10n
var s_js_ref_href = '/en-US/docs/Web/JavaScript/Reference';
var s_js_ref_title = 'JavaScript Reference';
var s_js_section = $0;
var s_js_subject = $1;
var s_js_full_href = s_js_ref_href + '/' + s_js_section + '/' + s_js_subject;
var s_js_property_tag = 'Property';
var s_js_method_tag = 'Method';
var s_js_title_methods = 'Methods';
var s_js_title_properties = 'Properties';

var pageList = page.subpagesExpand(s_js_full_href);   // Get subpages, including tags
var resultProperties = [];
var resultMethods = [];

// Get pages for the current section. Split up methods and properties.
for (aPage in pageList) {
    if (containsTag(pageList[aPage].tags, s_js_subject) &&
        containsTag(pageList[aPage].tags, s_js_property_tag)) {
        resultProperties.push(pageList[aPage]);
    }
    if (containsTag(pageList[aPage].tags, s_js_subject) &&
        containsTag(pageList[aPage].tags, s_js_method_tag)) {
        resultMethods.push(pageList[aPage]);
    } 
} 

%>

<section class="Quick_links" id="Quick_Links">
    <ol>
        <li><strong><a href="<%=s_js_full_href%>"><code><%=s_js_subject%></code></a></strong></li>

        <li data-default-state="open"><a href="#"><strong><%=s_js_title_properties%></strong></a>
            <ol>
            <% for (aPage in resultProperties) { %>
                <li>
                    <a href="<%-resultProperties[aPage].url%>" title="<%-mdn.escapeQuotes(resultProperties[aPage].summary)%>"><code><%-resultProperties[aPage].title%></code></a>
                    <% if (containsTag(resultProperties[aPage].tags, 'Experimental')) { %>
                         <span class="sidebar-icon"><%-template("ExperimentalBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultProperties[aPage].tags, 'Non-standard')) { %>
                         <span class="sidebar-icon"><%-template("NonStandardBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultProperties[aPage].tags, 'Deprecated')) { %>
                         <span class="sidebar-icon"><%-template("DeprecatedBadge", [1])%></span>
                    <% } %>
                </li>
            <% } %>
            </ol>
        </li>
        
        <li data-default-state="open"><a href="#"><strong><%=s_js_title_methods%></strong></a>
            <ol>
            <% for (aPage in resultMethods) { %>
                <li>
                    <a href="<%-resultMethods[aPage].url%>" title="<%-mdn.escapeQuotes(resultMethods[aPage].summary)%>"><code><%-resultMethods[aPage].title%></code></a>
                    <% if (containsTag(resultMethods[aPage].tags, 'Experimental')) { %>
                        <span class="sidebar-icon"><%-template("ExperimentalBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultMethods[aPage].tags, 'Non-standard')) { %>
                         <span class="sidebar-icon"><%-template("NonStandardBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultMethods[aPage].tags, 'Deprecated')) { %>
                         <span class="sidebar-icon"><%-template("DeprecatedBadge", [1])%></span>
                    <% } %>
                </li>
            <% } %>
            </ol>
        </li>

    </ol>
</section>
