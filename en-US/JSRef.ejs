<%
// Generate quick links for JavaScript reference docs
//
// TODO: Highlight or remove the link for the page you are currently on (?)
// TODO: Ordering of prototype / static methods (bug 948576)
//
// Parameters:
//
//  $0 - JavaScript reference section (e.g Global_Objects) â€“ OBSOLETE
//  $1 - JavaScript reference object/subject (e.g. Number, Array, Function)
//  $2 - Related objects to display (comma separated)
// 
// Example: {{JSRef("Global_Objects", "Number")}} 
// Includes quicklinks for the Number object including all methods and properties
// and also includes inherited methods/properties from Object and Function


var containsTag = page.hasTag;
var slug = env.slug;
var locale = env.locale;
var slug_stdlib = '/' + env.locale + '/docs/Web/JavaScript/' + text['refslug'] + text['stdlibslug'];
var mainObj = slug.replace(slug_stdlib, '').split('/')[0];

// Data for inheritance chain
var inheritance = ["Object", "Function"];
var inheritanceData = {
    "Math": ["Object"],
    "Function": ["Object"],
    "Object": ["Function"],
    "JSON": ["Object"],
    "Intl": ["Object"],
    "arguments": [],
    "Reflect": ["Object"],
};

if (typeof inheritanceData[$1] != 'undefined') {
    inheritance = inheritanceData[$1];
}

// Strings
var commonl10n = string.deserialize(template('L10n:Common'));
var jsl10n = string.deserialize(template('L10n:JavaScript'));

var text = {
    'refslug': mdn.getLocalString(jsl10n, 'slug_reference'),
    'stdlibslug': mdn.getLocalString(jsl10n, 'slug_global_objects'),
    'stdlib': mdn.getLocalString(jsl10n, 'stdlib'),
    'Properties': mdn.getLocalString(commonl10n, 'Properties'),
    'Methods': mdn.getLocalString(commonl10n, 'Methods'),
    'Inheritance': mdn.getLocalString(commonl10n, 'Inheritance'),
    'Related': mdn.getLocalString(commonl10n, 'Related_pages').replace('$1', $1),
};


// Collect pages
var source = {};
source[mainObj] = page.subpagesExpand(slug_stdlib + mainObj);
if  inheritance.indexOf("Function") > -1) {
    source["iFunction"] = page.subpagesExpand(slug_stdlib + 'Function');
}
if  inheritance.indexOf("Object") > -1) {
    source["iObject"] = page.subpagesExpand(slug_stdlib + 'Object');
}

var result = {};
result[mainObj] = {
    title: mainObj,
    methods: [],
    properties: [],
    defaultOpened: true
};
if  inheritance.indexOf("Function") > -1) {
result['iFunction'] = {
    title: 'Function',
    methods: [],
    properties: [],
    defaultOpened: false
};
}
if  inheritance.indexOf("Object") > -1) {
result['iObject'] = {
    title: 'Object',
    methods: [],
    properties: [],
    defaultOpened: false
};
}

var pageList, isObj, includeme;

for (var object in source) {
    pageList = source[object];
    if (object == "iObject") {
        isObj = true;
    }
    for (aPage in pageList) {
        if (isObj) {
            includeme = containsTag(pageList[aPage], "prototype");
        } else {
            includeme = true;
        }
        if (containsTag(pageList[aPage], result[object].title) && containsTag(pageList[aPage], 'Property') && includeme) {
            result[object].properties.push(pageList[aPage]);
        }
        if (containsTag(pageList[aPage], result[object].title) && containsTag(pageList[aPage], 'Method') && includeme) {
            result[object].methods.push(pageList[aPage]);
        } 
    }
}

var resultTitle,
resultProperties,
resultMethods,
resultOpen,
len = 0;

// Output: 
%>

<section class="Quick_links" id="Quick_Links">
    <ol>
        <li><strong><a href="<%=slug_stdlib%>"><%=text['stdlib']%></a></strong></li>

        <%
        for (object in result) {
            len++;
            resultTitle      = result[object].title || '';
            resultProperties = result[object].properties || '';
            resultMethods    = result[object].methods || '';
            resultOpen       = result[object].defaultOpened || '';
        %>
        <% if (len == 2) { %>
            <li><strong><%=text['Inheritance']%></strong></li>
        <% } %>
        <li><strong><a href="<%=slug_stdlib + resultTitle%>"><code><%=resultTitle%></code></a></strong></li>


        <% if (resultProperties.length > 0) { %>
        <li<%if(resultOpen) {%> data-default-state="open"<%}%>><a href="#"><strong><%=text['Properties']%></strong></a>
            <ol>
            <% for (aPage in resultProperties) { %>
                <li>
                    <% if (containsTag(resultProperties[aPage], 'Obsolete')) { %>
                        <s class="obsoleteElement">
                    <% } %>
                    <% if (resultProperties[aPage].url != '') { %>
                      <a href="<%-resultProperties[aPage].url%>" title="<%-mdn.escapeQuotes(resultProperties[aPage].summary || '')%>"><code><%-resultProperties[aPage].title%></code></a>
                    <% } %>
                    <% if (containsTag(resultProperties[aPage], 'Obsolete')) { %>
                        </s>
                    <% } %>
                    <% if (containsTag(resultProperties[aPage], 'Experimental')) { %>
                         <span class="sidebar-icon"><%-template("ExperimentalBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultProperties[aPage], 'Non-standard')) { %>
                         <span class="sidebar-icon"><%-template("NonStandardBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultProperties[aPage], 'Deprecated')) { %>
                         <span class="sidebar-icon"><%-template("DeprecatedBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultProperties[aPage], 'Obsolete')) { %>
                        <span class="sidebar-icon"><%-template("ObsoleteBadge", [1])%></span>
                    <% } %>
                </li>
            <% } %>
            </ol>
        </li>
        
        <% } if (resultMethods.length > 0) { %>
        <li<%if(resultOpen) {%> data-default-state="open"<%}%>><a href="#"><strong><%=text['Methods']%></strong></a>
            <ol>
            <% for (aPage in resultMethods) { %>
                <li>
                     <% if (containsTag(resultMethods[aPage], 'Obsolete')) { %>
                        <s class="obsoleteElement">
                    <% } %>
                    <% if (resultMethods[aPage].url != '') { %>
                        <a href="<%-resultMethods[aPage].url%>" title="<%-mdn.escapeQuotes(resultMethods[aPage].summary || '')%>"><code><%-resultMethods[aPage].title%></code></a>
                    <% } %>
                    <% if (containsTag(resultMethods[aPage], 'Obsolete')) { %>
                        </s>
                    <% } %>
                    <% if (containsTag(resultMethods[aPage], 'Experimental')) { %>
                        <span class="sidebar-icon"><%-template("ExperimentalBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultMethods[aPage], 'Non-standard')) { %>
                         <span class="sidebar-icon"><%-template("NonStandardBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultMethods[aPage], 'Deprecated')) { %>
                         <span class="sidebar-icon"><%-template("DeprecatedBadge", [1])%></span>
                    <% } %>
                    <% if (containsTag(resultMethods[aPage], 'Obsolete')) { %>
                        <span class="sidebar-icon"><%-template("ObsoleteBadge", [1])%></span>
                    <% } %>
                </li>
            <% } %>
            </ol>
        </li>
        <% } %>
        
        <% if (len == 1 && $2) { %>
            <li><strong><%=text['Related_pages']%></strong></li>
            <% var arr = $2.split(","); 
                for (var i = 0; i <  arr.length; i++) { %>
                    <li><strong><a href="<%=slug_stdlib + arr[i]%>"><code><%=arr[i]%></code></a></strong></li>
            <% } %>
        <% } %>
        
        <% } %>

    </ol>
</section>
