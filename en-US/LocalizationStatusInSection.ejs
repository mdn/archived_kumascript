<%
// Generates a table of the localization status for a given section
//
// Parameters:
//  $0  -  The slug to build the table for (e.g. "/en-us/docs/Web/JavaScript")
//  $1  -  The locale to check for the localization status


var section = $0;
var locale = $1;


var pageList = page.subpagesExpand(section);
var result = [];
var translationCounter = 0;
var outdatedCounter = 0;

function getPages(pageList) {
    if (pageList) {
        for (var i = 0; i < pageList.length; i++) {
            result.push({title: pageList[i].title.replace('<','&lt;').replace('>','&gt;'), url: pageList[i].url, translations: pageList[i].translations, last_edit: pageList[i].last_edit})
            var subpage = getPages(pageList[i].subpages);
            if (hasTranslation(pageList[i].translations, locale)) {
                translationCounter++;
            }
            var translation = getTranslation(pageList[i].translations, locale);
            if (isOutdated(pageList[i].last_edit, translation.last_edit)) {
                outdatedCounter++;
            }
        }
    }
}

function isOutdated(enDate, l10nDate) {
    if (!enDate || typeof enDate == 'undefined' || !l10nDate || typeof l10nDate == 'undefined') return 0;
    if (new Date(l10nDate) < new Date(enDate)) return 1;
    return 0;
}

function daysBetween(date1, date2) {
  date1 = new Date(date1);
  date2 = new Date(date2);
  
  var aDay = 1000*60*60*24;

  var d1ms = date1.getTime();
  var d2ms = date2.getTime();
  var diff = d2ms - d1ms;
    
  return Math.round(diff/aDay); 
}

function hasTranslation(pageTranslations, locale) {
    if (!pageTranslations || typeof pageTranslations == 'undefined') return 0;
    for (var i = 0, len = pageTranslations.length; i < len; i++) {
        if (pageTranslations[i].locale == locale) return 1;
    }
    return 0;
}

function getTranslation(pageTranslations, locale) {
    if (!pageTranslations || typeof pageTranslations == 'undefined') return 0;
    for (var i = 0, len = pageTranslations.length; i < len; i++) {
        if (pageTranslations[i].locale == locale) return pageTranslations[i];
    }
    return 0;
}

getPages(pageList);


var lang = env.locale;
switch(lang) {
    default:
        summary = "Summary";
        details = "Details";
        page = "Page";
        pages = "Pages";
        translation = "Translated";
        uptodate = "Up-to-date";
        break;
}

var translationPercent = Math.ceil((translationCounter / result.length) * 100);
var uptodateCounter = result.length - outdatedCounter;
var uptodatePercent = Math.ceil((uptodateCounter / result.length) * 100);
%>

<h2><%=summary%></h2>
<table class="docstatussummary standard-table">
  <thead>
    <tr>
      <th><%=pages%></th>
      <th><%=translation%></th>
      <th><%=uptodate%></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><%=result.length%></td>
      <td><%=translationCounter%> (<%=translationPercent%>%)</td>
      <td><%=uptodateCounter%> (<%=uptodatePercent%>%)</td>
    </tr>
  </tbody>
</table>

<h2><%=details%></h2>
<table class="fullwidth-table">
<thead>
    <th><%=page%></th>
    <th><%=translation%></th>
</thead>
<tbody>

<% for (i=0; i < result.length; i++) { %>
<tr>
    <td><a href='<%=result[i].url%>'><%=result[i].title%></a></td>
    <% if (hasTranslation(result[i].translations, locale)) {
        var translation = getTranslation(result[i].translations, locale);
        if (isOutdated(result[i].last_edit, translation.last_edit)) { 
            var days = daysBetween(translation.last_edit, result[i].last_edit); %>
            <td style="background-color: #FF9"><a href="<%=translation.url%>">Yes, but not up to date (<%=days%> days older).</a></td>
        <% } else { %>
            <td><a href="<%=translation.url%>">Yes.</a></td>
        <% } %>
    <% } else { %>
        <td style="background-color: #FCC">Not available.</td>
    <% } %>
</tr>
<% } %>

</tbody>
</table>
