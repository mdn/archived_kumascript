<%
// This template allows to build reference tables for HTML
//
// Param:
// $0 : An optional tag to filter the list of HTML elements or a configuration object
//      The configuration object get three optional parameters:
//      * include : An array of tags, the HTML Element page must have one of them to be listed
//      * exclude : An array of tags, the HTML Element page must NOT have any of them to be listed
//      * elements: An array of elements name to add to the list of HTML elements (useful for custom list or not documented elements)  


// LOCALISATION
// ------------

var l10n = {
    element : mdn.localString({
        "en-US": "Element",
        "fr"   : "Élément"
    }),
    description : mdn.localString({
        "en-US": "Description"
    }),
    
    deprecated : mdn.localString({
        "en-US": "This element is deprecated",
        "fr"   : "Cet élément est obsolète"
    }),
    
    experimental : mdn.localString({
        "en-US": "This element is considered experimental",
        "fr"   : "Cet élément est considéré comme experimental"
    }),
    
    html5 : mdn.localString({
        "en-US": "This element has been introduce with HTML5",
        "fr"   : "Cet élément a été ajouté avec HTML5"
    }),
    
    components : mdn.localString({
        "en-US": "This element has been introduce with the Web Components specifications",
        "fr"   : "Cet élément a été introduit par les spécifications sur les Web Components"
    })
};


// UTILS
// -----

// Simple function to turn a string into lower case. This especialy made to work
// as a walking function for Array.prototypt.map
function lowerMe(S) {
    return S.toLowerCase();
}

// Function to check is two Arrays has at least one value in common.
function hasCommonTag(A, B) {
    if (!Array.isArray(A) || !Array.isArray(A)) return false;
    
    // To fasten check, we make sure b is always the smaller array.
    var a = A.length >= B.length ? A : B;
    var b = A.length >= B.length ? B : A;
    
    for (var i in b) {
        if (a.indexOf(b[i]) > -1) return true;    
    }

    return false;
}


// CODE VARIABLES
// --------------

var tag, badge,
    TagFilters = {
        include : typeof $0 === 'string' ? [lowerMe($0)]
                : $0 && $0.include && Array.isArray($0.include) ? $0.include.map(lowerMe)
                : [],
        exclude : $0 && $0.exclude && Array.isArray($0.exclude) ? $0.exclude.map(lowerMe)
                : []
    },
    ForcedElements = $0 && $0.elements && Array.isArray($0.elements) ? $0.elements.map(lowerMe) : [],
    RGXCleanTag    = /[<>]/g,
    HTMLRefBaseURL = "/docs/Web/HTML/Element",
    HTMLLocalBaseURL = "/" + env.locale + HTMLRefBaseURL + "/",
    HTMLDocPages   = page.subpagesExpand("/en-US" + HTMLRefBaseURL),
    HTMLTags       = [];


// BUSINESS LOGIC
// --------------

// Get the relevant pages for HTML Elements based on the template input
HTMLDocPages.forEach(function (page) {
    var p,
        t = lowerMe(page.title.replace(RGXCleanTag, "")),
        tags = page.tags.map(lowerMe);

    if (ForcedElements.indexOf(t) > -1
    || ((TagFilters.include.length === 0 ||  hasCommonTag(tags, TagFilters.include))
    &&  (TagFilters.exclude.length === 0 || !hasCommonTag(tags, TagFilters.exclude)))){
        p = wiki.getPage(HTMLLocalBaseURL + t);

        HTMLTags.push({
            tagName      : t,
            
            // We need to special case the "Heading elements" article which stand for all hn elements.
            tagLink      : t !== 'heading elements' ? template("HTMLelement", [t])
                         : ['h1','h2','h3','h4','h5','h6'].map(function (tg) { return template("HTMLelement", [tg]); }).join(', '),
            
            summary      : (p && p.summary) || "",
            deprecated   : hasCommonTag(tags, ['deprecated', 'obsolete']),
            experimental : hasCommonTag(tags, ['experimental']),
            html5        : hasCommonTag(tags, ['html5']),
            component    : hasCommonTag(tags, ['html components'])
        });
    }
});

// Handle elements inside the ForcedElements liste which currently do not have
// an english documentation page yet.
var ElementList = HTMLTags.map(function (ele) {
    return ele.tagName;
});

var missingElement = ForcedElements.map(function (ele) {
    if(ElementList.indexOf(ele) === -1) {
        return ele;
    }
});

if (missingElement.length > 0) {
    missingElement.forEach(function (t) {
        HTMLTags.push({
            tagName      : t,
            tagLink      : template("HTMLelement", [t]),
            summary      : "",
            deprecated   : false,
            experimental : false,
            html5        : false,
            component    : false
        });
    });
}

// We make sure elements are sorted in alphabetical order.
HTMLTags.sort(function (a, b) {
    return a.tagName.localeCompare(b.tagName);
});
%>
<table class="standard-table">
 <thead>
  <tr>
   <th scope="col">&nbsp;</th>
   <th scope="col"><%- l10n.element %></th>
   <th scope="col"><%- l10n.description %></th>
  </tr>
 </thead>
 <tbody>
 <%
 for (var i = 0, l = HTMLTags.length; i < l; i++) {
    badge = HTMLTags[i].deprecated   ? template("FontAwesomeIcon", ["icon-thumbs-down-alt", l10n.deprecated])
          : HTMLTags[i].experimental ? template("FontAwesomeIcon", ["icon-beaker", l10n.experimental])
          : HTMLTags[i].component    ? template("FontAwesomeIcon", ["icon-cogs", l10n.components])
          : HTMLTags[i].html5        ? '<a href="/' + env.locale + '/docs/HTML/HTML5"><img alt="' + l10n.html5 + '" src="/files/3843/HTML5_Badge_32.png" width="16" height="16"></a>'
          : '&nbsp;';
 %>
  <tr>
   <td style="vertical-align: top;"><%- badge %></td>
   <td style="vertical-align: top;"><%- HTMLTags[i].tagLink %></td>
   <td><%- HTMLTags[i].summary %></td>
  </tr>
<%
}
%>
 </tbody>
</table>
