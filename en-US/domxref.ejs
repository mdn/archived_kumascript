<%
/* Used for generating cross-references within the DOM documentation. */
/* This will first try to link to DOM/$0, then DOM:$0 if that doesn't exist */
/* if you specify the API name with parens (ie, "foo()"), the link is to */
/* lang/DOM/foo but the title is displayed as "foo()" to make it clear it's */
/* a function */
/* @param */
/*   The path of the page to link to, relative to the DOM documentation path. */
/* @param [optional] */
/*   The text to use for the link.  If omitted, the value of the first */
/*   parameter will be used */
/* @param [optional] */
/*   An anchor to link to on the page. Link text will display as $0.$2 or $1.$2 */
/* @param [optional] "/
/*   If set, do not put the domxref text in code */

/* get a page's language (Don't use page.language!) */
var lang = env.locale;
var api = $0;
var str = $1 || $0;

if (api.substr(-2) === '()') api = api.substr(0, api.length - 2);

var URLnew = "/" + lang + '/docs/Web/API/' + api;
var URL = "/" + lang + '/docs/DOM/' + api;

var anch = '';

if ($2) {
  str = str + '.' + $2;
  anch = '#' + $2;
}

// Allow only the following local to go to the new URL
// as other locals haven't move the pages yet.
// fr is on its way to move, even if it's not complete it's easier that way
var filter = ['en-US', 'ja', 'fr'];

if (filter.indexOf(lang) > -1 && wiki.pageExists(URLnew)) {
    URL = URLnew;
}

// Now that we have the URL, let's gather the page summary for our tooltip

var page = wiki.getPage(URL);
var summary = "";

if (page && page.summary) {
    var summary = mdn.escapeQuotes(page.summary);
}

var code = '';
var endcode = '';
if (!$3) { code = '<code>'; endcode = '</code>' }

%><a href="<%- URL+anch %>" title="<%-summary%>"><%- code %><%= str %><%- endcode %></a>
