<%

/* first parameter: inline/header/method */
/* second parameter: version of obsolescence (optional) */
/*   prepend version with HTML, CSS, JS, or Gecko for those techs */
/* third parameter: additional information required for the type specified by the first parameter */
/*   method requires the method name */

var lang = env.locale;

var str = "";
var ver = "";
var link = "";
var tip = "";

if ($1) {
    var t = string.tolower($1);
    var n = "";

    if (string.startswith(t, "js")) {
        n = string.trim(string.substr(t, 2));
        ver = "JavaScript ";
        if (string.length(n) > 0) {
            if(wiki.pageExists('/' + lang + '/docs/JavaScript/New_in_JavaScript/' + n)) {
                link = '/' + lang + '/docs/JavaScript/New_in_JavaScript/' + n;
            } else if(wiki.pageExists('/en-US/docs/JavaScript/New_in_JavaScript/' + n)) {
                link = '/en-US/docs/JavaScript/New_in_JavaScript/' + n;
            }
        }
    } else if (string.startswith(t, "css")) {
        n = string.trim(string.substr(t, 3));
        ver = "CSS ";
    } else if (string.startswith(t, "html")) {
        n = string.trim(string.substr(t, 4));
        ver = "HTML";
        if (string.length(n) > 0) {
            if(wiki.pageExists('/' + lang + '/docs/HTML/HTML' + n)) {
                link = '/' + lang + '/docs/HTML/HTML' + n;
            } else if(wiki.pageExists('/en-US/docs/HTML/HTML' + n)) {
                link = '/en-US/docs/HTML/HTML' + n;
            } else if(wiki.pageExists('/' + lang + '/docs/HTML')) {
                link = '/' + lang + 'docs//HTML';
            } else {
                link = '/en-US/docs/HTML';
            }
        }
    } else if (string.startswith(t, "gecko")) {
        n = string.trim(string.substr(t, 5));
        ver = "Gecko ";
        tip = template('geckoRelease', [n]);
    }
    
    n = string.trim(n);

    if (string.length(n) > 0) {
        ver = ver + n;
    } else {
        ver = "";
    }
}

if (string.length(link)) { ver = web.link(link, ver); }

switch(lang) {
    case 'de':
        str = "Veraltet";
        if (string.length(ver)) {
            str = str + " " + ver;
        }
    break;
    case 'es':
        str = "Obsoleto";
        if (string.length(ver)) {
            str = str + " " + ver;
        }
    break;
    case 'fr':
        str = "Obsolète";
        if (string.length(ver)) {
            str = str + " depuis " + ver;
        }
    break;
    case 'ja':
        str = "廃止";
        if (string.length(ver)) {
            str = str + " " + ver;
        }
    break;
    case 'ko':
        str = "안씀";
        if (string.length(ver)) {
            str = str + " " + ver;
        }
    break;
    case 'pl':
        str = "Przestarzały";
        if (string.length(ver)) {
            str = str + " " + ver;
        }
    break;
    case 'zh-TW':
        str = "已過時";
        if (string.length(ver)) {
            str = str + " " + ver;
        }
    break;
    case 'zh-CN':
        str = "已废弃";
        if (string.length(ver)) {
            str = str + " " + ver;
        }
    break;
    default:
        str = "Obsolete";
        if (string.length(ver)) {
            str = str + " since " + ver;
    }
    break;
}


switch($0) {
  case 'inline':
    %><span title="<%=tip%>" class="inlineIndicator obsolete obsoleteInline"><%-str%></span><%
    break;
  case 'header':
    if (string.length(tip)) {
      str = str + " " + tip;
    }
    %><div class="overheadIndicator obsolete obsoleteHeader">
      <p style="margin: 4px 0;"><%-str%></p>
    </div><%
    break;
  case 'method':
    if (string.length(tip)) {
      str = str + " " + tip;
    }
    %><div>
      <span class="obsoleteMethod"><%- str %></span>
      <h3><%- web.html($2) %>()</h3>
    </div><%
    break;
}
%>
