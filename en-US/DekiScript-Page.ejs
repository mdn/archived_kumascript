<% module.exports = buildAPI({
    
    initialize: function (options) {
        BaseAPI.prototype.initialize.call(this, options);
        
        // Incomplete list of Page vars, but probably good enough.
        // See also: <http://developer.mindtouch.com/en/docs/DekiScript/Reference/Wiki_Functions_and_Variables/Page>
        this.setVars({
            date: new Date(env.modified),
            id: env.id,
            language: env.locale,
            name: env.slug,
            path: env.path,
            tags: env.tags,
            title: env.title,
            uri: env.url
        });
    },
    
    // Determines whether or not the page has the specified tag. Returns true
    // if it does, otherwise false. This is case-insensitive.
    //
    // Parameters:
    //  
    hasTag: function(aPage, aTag) {
        var theTag = aTag.toLowerCase();
        
        // First, returrn false at once if there are no tags on the page
        
        if (aPage.tags == undefined || aPage.tags == null || aPage.tags.length == 0) {
            return false;
        }
        
        // Now look for a match
        
        for (var i=0; i<aPage.tags.length; i++) {
            if (aPage.tags[i].toLowerCase == theTag) {
                return true;
            }
        }
        
        return false;
    },

    // http://developer.mindtouch.com/en/docs/DekiScript/Reference/Wiki_Functions_and_Variables/Page.Subpages
    // Optional path, defaults to current page
    // Optional depth. Number of levels of children to include, 0 is the path page
    // Optional self, defaults to false. Include the path page in the results
    subpages: function (path, depth, self) {
        var url = '';
        if (path) {
            var p = kuma.url.parse(env.url, true);
            url = p.protocol + '//' + p.host + encodeURI(path) + '$children';
        } else {
            url = env.url + '$children';
        }
        var depth_check = parseInt(depth);
        if(depth_check  >= 0) {
            url += '?depth=' + depth_check;
        }
        var mdn = require('MDN:Common');
        var subpages = mdn.fetchJSONResource(url);
        var result = [];
        if (subpages != null) {
            if (!self) {
                result = subpages.subpages || [];
            } else {
                result = [subpages];
            }
        }
        return result;
    },

    // http://developer.mindtouch.com/en/docs/DekiScript/Reference/Wiki_Functions_and_Variables/Page.Subpages
    // Optional path, defaults to current page
    // Optional depth. Number of levels of children to include, 0 is the path page
    // Optional self, defaults to false. Include the path page in the results
    subpagesExpand: function (path, depth, self) {
        var url = '';
        if (path) {
            var p = kuma.url.parse(env.url, true);
            url = p.protocol + '//' + p.host + encodeURI(path) + '$children';
        } else {
            url = env.url + '$children';
        }
        
        url += '?expand';
        
        var depth_check = parseInt(depth);
        if(depth_check  >= 0) {
            url += '&depth=' + depth_check;
        }
        var mdn = require('MDN:Common');
        var subpages = mdn.fetchJSONResource(url);
        var result = [];
        if (subpages != null) {
            if (!self) {
                result = subpages.subpages || [];
            } else {
                result = [subpages];
            }
        }
        return result;
    }
    
}); %>
