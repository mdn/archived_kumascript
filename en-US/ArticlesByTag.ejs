<%
// ArticlesByTag produce a list of article based on tags and URL filters
// By default, articles are extracted from the /Learn, /docs/Web/Guide and /docs/Web/Tutorial sections of MDN
//
// Param:
// $0 : A tag to filter the list of articles
//      or a configuration object with the following properties:
//      * urls: (optional) An Array of URL prefixes (starting with / without the local) that the articles must match
//      * tags: An Array of tags articles must have to get in the list
//
// Note: This template is not recursive, which means that with the URL /Learn, it will only search direct children of
//       that URL but not the children of the children (So /Learn/foo will be caught but /Learn/foo/bar won't)

// L10N
// ----------------------------------------------------------------------------
var l10n = {
    noArticles : mdn.localString({
        "en-US": "There is no articles writen yet. <a href=\"/en-US/docs/MDN/Getting_started\">Please, consider contributing</a>.",
        "fr"   : "Aucun articles n'a encore été écris ou traduit. <a href=\"/fr/docs/MDN/Débuter_sur_MDN\">N'hésitez pas à le faire vous-même.</a>"
    })
}

// UTILS
// ----------------------------------------------------------------------------
function lowerMe(S) {
    return S.toLowerCase();
}

// ENVIRONEMENT
// ----------------------------------------------------------------------------
var ARTICLES  = [];
var TAGS      = ($0.tags && Array.isArray($0.tags) ? $0.tags : [$0]).map(lowerMe);
var URL_ROOTS =  $0.urls && Array.isArray($0.urls) ? $0.urls : [
    '/Learn',
    '/docs/Web/Guide',
    '/docs/Web/Tutorials'
];

// PAGE LOGIC EXTRACTION
// ----------------------------------------------------------------------------
URL_ROOTS.forEach(function (root) {
    var url = '/' + env.locale + root;
    var pages = page.subpagesExpand(url).forEach(function (p) {
        var self  = env.url.indexOf(p.url) > -1;
        var tags  = p.tags.map(lowerMe);
        var match = !self && TAGS.every(function (t) {
            return tags.indexOf(t) > -1;
        });
        
        if (match) {
            ARTICLES.push({
                title   : p.title,
                url     : p.url,
                summary : p.summary
            });
        }
    });
});

// DISPLAY THE LIST OF ARTICLES
// ----------------------------------------------------------------------------
if (ARTICLES.length > 0) {
    ARTICLES.sort(function (a,b) {
        return a.title.localeCompare(b.title);
    });

%>
<dl>
<%
    for (n in ARTICLES) {
%>
    <dt><a href="<%= ARTICLES[n].url %>"><%- ARTICLES[n].title %></a></dt>
    <dd><%- ARTICLES[n].summary %></dd>
<%
    }
%>
</dl>
<%
} else {
%><p><em><%- l10n.noArticles %></em></p><%
}
%>
